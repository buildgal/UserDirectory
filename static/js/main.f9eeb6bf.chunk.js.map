{"version":3,"sources":["components/SearchForm/index.js","App.js","index.js"],"names":["SearchForm","props","className","htmlFor","value","search","onChange","handleInputChange","name","list","type","placeholder","id","TodoList","inputRef","useRef","useReducer","state","action","length","Math","random","filter","_","index","items","dispatch","onSubmit","e","preventDefault","current","ref","map","item","onClick","li","a","i","document","getElementById","toUpperCase","getElementsByTagName","textContent","innerText","indexOf","style","display","DropdownButton","title","Dropdown","Item","href","ReactDOM","render"],"mappings":"8OAwBeA,MApBf,SAAoBC,GAClB,OACE,sBAAMC,UAAU,SAAhB,SACE,sBAAKA,UAAU,aAAf,UACE,uBAAOC,QAAQ,WAAf,0BACA,uBACEC,MAAOH,EAAMI,OACbC,SAAUL,EAAMM,kBAChBC,KAAK,OACLC,KAAK,OACLC,KAAK,OACLR,UAAU,eACVS,YAAY,iCACZC,GAAG,e,gBCgGEC,MA3Gf,WACE,IAAMC,EAAWC,mBADC,EAEQC,sBAAW,SAACC,EAAOC,GAC3C,OAAQA,EAAOR,MACf,IAAK,MACH,MAAM,GAAN,mBACKO,GADL,CAEE,CACEL,GAAIK,EAAME,OAASC,KAAKC,SACxBb,KAAMU,EAAOV,QAInB,IAAK,SACH,OAAOS,EAAMK,QAAO,SAACC,EAAGC,GACtB,OAAOA,IAAUN,EAAOM,SAE5B,QACE,OAAOP,KAER,IApBe,mBAEXQ,EAFW,KAEJC,EAFI,KAqDlB,OACE,sBAAKxB,UAAU,wBAAf,UACE,oDACA,uBAAMA,UAAU,kBAAkByB,SAlCjB,SAAAC,GACnBA,EAAEC,iBACFH,EAAS,CACPhB,KAAM,MACNF,KAAMM,EAASgB,QAAQ1B,QAEzBU,EAASgB,QAAQ1B,MAAQ,IA4BvB,UACE,uBACEF,UAAU,eACV6B,IAAKjB,EACLH,YAAY,wCAEZ,wBAAQT,UAAU,4BAA4BQ,KAAK,SAAnD,uBAMJ,iDACA,oBAAIR,UAAU,aAAd,SACGuB,EAAMO,KAAI,SAACC,EAAMT,GAAP,OACT,qBAAItB,UAAU,kBAAd,UACG+B,EAAKzB,KACN,wBACEN,UAAU,sBACVgC,QAAS,kBAAMR,EAAS,CAAEhB,KAAM,SAAUc,WAF5C,wBAFmCS,EAAKrB,SAW9C,cAAC,EAAD,UAEA,wBACQV,UAAU,sBACVgC,QApDd,WACI,IAAWZ,EAAYa,EAAIC,EAAGC,EAK9B,IAHAf,EADQgB,SAASC,eAAe,WACjBnC,MAAMoC,cAErBL,EADKG,SAASC,eAAe,QACrBE,qBAAqB,MACxBJ,EAAI,EAAGA,EAAIF,EAAGhB,OAAQkB,MACvBD,EAAID,EAAGE,GAAGI,qBAAqB,KAAK,IACvBC,aAAeN,EAAEO,WACjBH,cAAcI,QAAQtB,IAAW,EAC1Ca,EAAGE,GAAGQ,MAAMC,QAAU,GAEtBX,EAAGE,GAAGQ,MAAMC,QAAU,QAsC5B,gCASA,eAACC,EAAA,EAAD,CAAgBnC,GAAG,wBAAwBoC,MAAM,YAAjD,UACA,cAACC,EAAA,EAASC,KAAV,CAAeC,KAAK,aAApB,uBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,KAAK,aAApB,wBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,KAAK,aAApB,8B,YChGNC,IAASC,OAAO,cAAC,EAAD,IAASf,SAASC,eAAe,W","file":"static/js/main.f9eeb6bf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"language\">Search Term:</label>\r\n        <input\r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          name=\"term\"\r\n          list=\"term\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Type in a search term to begin\"\r\n          id=\"term\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { useReducer, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport SearchForm from \"./components/SearchForm\";\r\nimport {Dropdown} from 'react-bootstrap';\r\nimport {DropdownButton} from 'react-bootstrap';\r\n\r\nfunction TodoList() {\r\n  const inputRef = useRef();\r\n  const [items, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n    case \"add\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: state.length * Math.random(),\r\n          name: action.name\r\n        }\r\n      ];\r\n      // Bonus: Remove a todo from the list.\r\n    case \"remove\":\r\n      return state.filter((_, index) => {\r\n        return index !== action.index;\r\n      });\r\n    default:\r\n      return state;\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: \"add\",\r\n      name: inputRef.current.value\r\n    });\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  //search function from WW3 Schools \r\n  //https://www.w3schools.com/howto/tryit.asp?filename=tryhow_js_filter_list\r\n\r\nfunction searchFunction() {\r\n    let input, filter, ul, li, a, i, txtValue;\r\n    input = document.getElementById(\"myInput\");//connect this to the ui \r\n    filter = input.value.toUpperCase();\r\n    ul = document.getElementById(\"myUL\");\r\n    li = ul.getElementsByTagName(\"li\");\r\n    for (i = 0; i < li.length; i++) {\r\n        a = li[i].getElementsByTagName(\"a\")[0];\r\n        txtValue = a.textContent || a.innerText;\r\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n            li[i].style.display = \"\";\r\n        } else {\r\n            li[i].style.display = \"none\";\r\n        }\r\n    }\r\n}\r\n\r\n//table of employees need to display\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <h1>Employee Directory</h1>\r\n      <form className=\"form-group mt-5\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"form-control\"\r\n          ref={inputRef}\r\n          placeholder=\"Start typing what you need to do...\"\r\n        />\r\n          <button className=\"btn btn-success mt-3 mb-5\" type=\"submit\">\r\n          Search\r\n        </button>\r\n    \r\n      </form>\r\n    \r\n      <h4>Search History:</h4>\r\n      <ul className=\"list-group\">\r\n        {items.map((item, index) => (\r\n          <li className=\"list-group-item\" key={item.id}>\r\n            {item.name}\r\n            <button\r\n              className=\"btn btn-danger ml-5\"\r\n              onClick={() => dispatch({ type: \"remove\", index })}\r\n            >\r\n              X Remove\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <SearchForm>\r\n\r\n      <button\r\n              className=\"btn btn-danger ml-5\"\r\n              onClick= {searchFunction}>\r\n                Search Employees \r\n            </button>\r\n     \r\n      </SearchForm>\r\n\r\n\r\n      <DropdownButton id=\"dropdown-basic-button\" title=\"Search By\">\r\n      <Dropdown.Item href=\"#/action-1\">Job Title</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-2\">First Name</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-3\">Last Name</Dropdown.Item>\r\n    </DropdownButton>\r\n\r\n    \r\n\r\n\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}